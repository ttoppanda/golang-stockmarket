#!/usr/bin/env bash

goservices="ledger orderbook ticker"
containers="web_lb web ledger orderbook ticker"
BRANCH_NAME=$(git rev-parse --abbrev-ref HEAD)

source mock

# TRADE
if [[ $1 == "trade" ]]; then
  time trade
fi

# TEST
if [[ $1 == "test" ]]; then
  for service in $goservices; do
    cd "$service"_service && go test && cd ..
  done
fi

# BUILD ALL PRODUCTION AND PUSH TO DOCKER HUB
if [ $1 == "build" ] && [ $2 == "all" ]; then
    docker-compose -f docker-compose.build.yml build

    for container in $containers; do
        docker push nickstefan/market_$container
    done
fi

# BUILD PRODUCTION AND PUSH TO DOCKER HUB
if [ $1 == "build" ] && [ $2 != "all" ]; then
    docker-compose -f docker-compose.build.yml build
    docker push nickstefan/market_$2
fi

# BUILD, TAG AND PUSH IMAGE WITH BRANCH NAME
if [ $1 == "tag" ] && [ $2 != "all" ]; then
    docker-compose -f docker-compose.build.yml build
    IMAGE_ID=$(docker images | grep $2 | head -1 | awk '{ print $3 }')
    docker tag $IMAGE_ID nickstefan/market_$2:$BRANCH_NAME
    docker push nickstefan/market_$2:$BRANCH_NAME
fi


# KUBE HELPERS
if [ $1 == "kube" ] && [ $2 == "deploy" ]; then
    cd kubernetes
    source ./kube-deploy
    cd -
fi

if [ $1 == "kube" ] && [ $2 == "create" ]; then
    cd kubernetes
    source ./kube-create    
    cd -
fi

if [ $1 == "kube" ] && [ $2 == "delete" ]; then
    cd kubernetes
    source ./kube-delete
    cd -
fi


# KUBE ROLLING UPDATES
if [ $1 == "kube" ] && [ $2 == "update" ]; then
    source ./kubernetes/kube-conf
    source ./kubernetes/secrets
    kubectl rolling-update $3 --image=nickstefan/market_$3 --image-pull-policy=Always
fi


if [ $1 == "kube" ] && [ $2 == "update-tag" ]; then
    source ./kubernetes/kube-conf
    source ./kubernetes/secrets
    kubectl rolling-update $3 --image=nickstefan/market_$3:$BRANCH_NAME --image-pull-policy=Always
fi


# KUBE CLUSTER
if [ $1 == "kube" ] && [ $2 == "down" ]; then
    source ./kubernetes/kube-conf
    source ./kubernetes/secrets
    $HOME/kubernetes/cluster/kube-down.sh
fi

if [ $1 == "kube" ] && [ $2 == "info" ]; then
    source ./kubernetes/kube-conf
    source ./kubernetes/secrets
    source ./kubernetes/kube-info
fi




