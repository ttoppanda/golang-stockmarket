#!/usr/bin/env bash

goservices="ledger orderbook ticker"
containers="web_lb web ledger orderbook ticker"

source mock

# TRADE
if [[ $1 == "trade" ]]; then
  time trade
fi

# TEST
if [[ $1 == "test" ]]; then
  for service in $goservices; do
    cd $service && go test && cd ..
  done
fi

# BUILD ALL PRODUCTION AND PUSH TO DOCKER HUB
if [ $1 == "build" ] && [ $2 == "all" ]; then
    docker-compose -f docker-compose.prod.yml build

    for container in $containers; do
        docker push nickstefan/market_$container
    done
fi

# BUILD PRODUCTION AND PUSH TO DOCKER HUB
if [ $1 == "build" ] && [ -z "$2" ]; then
    docker-compose -f docker-compose.prod.yml build
    docker push nickstefan/market_$2
fi


# CONFIGURE ECS
if [ $1 == "ecs" ] && [ $2 == "configure" ]; then
    ecs-cli configure \
    --region us-west-2 \
    --profile default \
    --cluster clusterfornick
fi

# CREATE EC2 CLUSTER FOR USE WITH ECS
if [ $1 == "ecs" ] && [ $2 == "up" ]; then
    ecs-cli up \
    --keypair keyfornick \
    --capability-iam \
    --size 1 \
    --instance-type m4.2xlarge
fi

# DEPLOY CONTAINERS TO ECS
if [ $1 == "ecs" ] && [ $2 == "compose" ]; then
    ecs-cli compose --file kubernetes/docker-compose.yml up
fi

# DOWN CONTAINERS TO ECS
if [ $1 == "ecs" ] && [ $2 == "down" ]; then
    ecs-cli compose --file kubernetes/docker-compose.yml down
fi

# DOWN CONTAINERS AND CLUSTER
if [ $1 == "ecs" ] && [ $2 == "cluster" ] && [ $3 == "down" ]; then
    ecs-cli down --force
fi

